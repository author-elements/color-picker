{"version":3,"file":"author-color-picker.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorColorPickerElement extends AuthorBaseElement(HTMLElement) {\n  constructor () {\n    super(`{{TEMPLATE-STRING}}`)\n\n    this.UTIL.defineProperties({\n      hue: {\n        private: true,\n        default: 0\n      },\n\n      saturation: {\n        private: true,\n        default: 0\n      },\n\n      value: {\n        private: true,\n        default: 100\n      },\n\n      alpha: {\n        private: true,\n        default: 100\n      },\n\n      canvas: {\n        private: true,\n        readonly: true,\n        get: () => this.shadowRoot.querySelector('canvas')\n      },\n\n      context: {\n        private: true,\n        readonly: true,\n        get: () => this.PRIVATE.canvas.getContext('2d')\n      },\n\n      position: {\n        private: true,\n        default: {\n          x: 0,\n          y: 0\n        }\n      },\n\n      dimensions: {\n        private: true,\n        readonly: true,\n        get: () => this.PRIVATE.canvas.getBoundingClientRect()\n      },\n\n      initialWidth: {\n        private: true,\n        default: 236\n      },\n\n      initialHeight: {\n        private: true,\n        default: 118\n      }\n    })\n\n    this.UTIL.definePrivateMethods({\n      draw: (width = this.PRIVATE.dimensions.width, height = this.PRIVATE.dimensions.height, hue = this.PRIVATE.hue) => {\n        let { canvas, context, HSVToRGB } = this.PRIVATE\n\n        canvas.width = width\n        canvas.height = height\n\n        let rgb = HSVToRGB(hue, 100, 100)\n\n        context.clearRect(0, 0, width, height)\n        context.fillStyle = `rgba(${rgb[0]}, ${rgb[1]}, ${rgb[2]}, 1)`\n\t\t\t\tcontext.fillRect(0, 0, width, height)\n\n        let gradient = {\n          x: context.createLinearGradient(0, 0, width, 0),\n          y: context.createLinearGradient(0, 0, 0, height)\n        }\n\n        gradient.x.addColorStop(0, 'rgba(255, 255, 255, 1)')\n        gradient.x.addColorStop(1, 'rgba(255, 255, 255, 0)')\n\n        context.fillStyle = gradient.x\n        context.fillRect(0, 0, width, height)\n\n        gradient.y.addColorStop(0, 'rgba(0, 0, 0, 0)')\n        gradient.y.addColorStop(1, 'rgba(0, 0, 0, 1)')\n\n        context.fillStyle = gradient.y\n        context.fillRect(0, 0, width, height)\n      },\n\n      generateColorObject: (h = this.PRIVATE.hue, s = this.PRIVATE.saturation, v = this.PRIVATE.value) => {\n        let { alpha, HSVToRGB } = this.PRIVATE\n\n        let rgb = HSVToRGB(h, s, v)\n        let r = rgb[0]\n        let g = rgb[1]\n        let b = rgb[2]\n\n        return {\n          r,\n          g,\n          b,\n          a: alpha,\n          hex: `#${this.PRIVATE.RGBToHex(...rgb)}`,\n          rgba: `rgba(${rgb.join(',')},${alpha / 100})`\n        }\n      },\n\n      generatePositionObject: (position = this.PRIVATE.position) => ({\n        x: {\n          px: position.x,\n          pct: this.UTIL.getPercentageDecimal(position.x, this.clientWidth)\n        },\n\n        y: {\n          px: position.y,\n          pct: this.UTIL.getPercentageDecimal(position.y, this.clientHeight)\n        }\n      }),\n\n      getRelativePosition: evt => {\n        let { top, left } = this.PRIVATE.dimensions\n\n        let offset = {\n          x: evt.pageX - left - this.clientLeft,\n          y: evt.pageY - top - this.clientTop\n        }\n\n        return {\n          x: Math.min(Math.max(offset.x, 0), this.clientWidth),\n          y: Math.min(Math.max(offset.y, 0), this.clientHeight)\n        }\n      },\n\n      HSVToRGB: (h, s, v) => {\n        let r, g, b, i, f, p, q, t\n\n        h = Math.max(0, Math.min(360, h))\n        s = Math.max(0, Math.min(100, s))\n        v = Math.max(0, Math.min(100, v))\n\n        s /= 100;\n        v /= 100;\n\n        if(s == 0) {\n          r = g = b = v\n\n          return [\n            Math.round(r * 255),\n            Math.round(g * 255),\n            Math.round(b * 255)\n          ]\n        }\n\n        h /= 60\n        i = Math.floor(h)\n        f = h - i\n        p = v * (1 - s)\n        q = v * (1 - s * f)\n        t = v * (1 - s * (1 - f))\n\n        switch(i) {\n          case 0:\n            r = v\n            g = t\n            b = p\n            break\n\n          case 1:\n            r = q\n            g = v\n            b = p\n            break\n\n          case 2:\n            r = p\n            g = v\n            b = t\n            break\n\n          case 3:\n            r = p\n            g = q\n            b = v\n            break\n\n          case 4:\n            r = t\n            g = p\n            b = v\n            break\n\n          default:\n            r = v\n            g = p\n            b = q\n        }\n\n        return [\n          Math.round(r * 255),\n          Math.round(g * 255),\n          Math.round(b * 255)\n        ]\n      },\n\n      RGBToHex: (r, g, b) => {\n        let { unitToHex } = this.PRIVATE\n        return `${unitToHex(r)}${unitToHex(g)}${unitToHex(b)}`\n      },\n\n      unitToHex: unit => {\n        let hex = Number(unit).toString(16)\n\n        if (hex.length < 2) {\n          hex = `0${hex}`\n        }\n\n        return hex.toUpperCase()\n      },\n\n      pointermoveHandler: evt => {\n        if (evt.buttons < 1) {\n          return\n        }\n\n        document.addEventListener('pointerup', this.PRIVATE.pointerupHandler)\n\n        let { getPercentageDecimal } = this.UTIL\n        let { generateColorObject, generatePositionObject, position } = this.PRIVATE\n        let relative = this.PRIVATE.getRelativePosition(evt)\n\n        if (relative.x !== position.x || relative.y !== position.y) {\n          this.PRIVATE.saturation = getPercentageDecimal(relative.x, this.clientWidth) * 100\n          this.PRIVATE.value = 100 - (getPercentageDecimal(relative.y, this.clientHeight) * 100)\n          this.PRIVATE.position = relative\n\n          this.emit('sample', {\n            color: generateColorObject(),\n            position: generatePositionObject()\n          })\n        }\n      },\n\n      pointerupHandler: evt => {\n        let { generateColorObject, generatePositionObject, pointermoveHandler, pointerupHandler } = this.PRIVATE\n\n        // this.PRIVATE.previousColor = this.PRIVATE.selectedColor\n        // this.PRIVATE.selectedColor = currentColor\n\n        this.emit('change', {\n          // previous: this.previousColor,\n          color: generateColorObject(),\n          position: generatePositionObject()\n        })\n\n        document.removeEventListener('pointermove', pointermoveHandler)\n        document.removeEventListener('pointerup', pointerupHandler)\n      }\n    })\n\n    this.UTIL.registerListeners(this, {\n      connected: () => {\n        let { draw, initialWidth, initialHeight } = this.PRIVATE\n        draw(initialWidth, initialHeight)\n      },\n\n      pointerenter: evt => {\n        let { dimensions, draw, initialWidth, initialHeight } = this.PRIVATE\n\n        if (initialWidth !== dimensions.width || initialHeight !== dimensions.height) {\n          draw()\n        }\n      },\n\n      pointerdown: evt => {\n        this.PRIVATE.position = this.PRIVATE.getRelativePosition(evt)\n\n        let { getPercentageDecimal } = this.UTIL\n        let { generateColorObject, generatePositionObject, HSVToRGB, hue, pointermoveHandler, position } = this.PRIVATE\n\n        this.PRIVATE.saturation = getPercentageDecimal(position.x, this.clientWidth) * 100\n        this.PRIVATE.value = 100 - (getPercentageDecimal(position.y, this.clientHeight) * 100)\n\n        this.emit('change', {\n          color: generateColorObject(),\n          position: generatePositionObject()\n        })\n\n        document.addEventListener('pointermove', pointermoveHandler)\n      }\n    })\n  }\n\n  set hue (val) {\n    this.PRIVATE.hue = Math.max(0, Math.min(360, val))\n    this.PRIVATE.draw()\n  }\n\n  set saturation (val) {\n    this.PRIVATE.saturation = Math.max(0, Math.min(100, val))\n    console.log('REPOSITION TARGET')\n  }\n\n  set value (val) {\n    this.PRIVATE.value = Math.max(0, Math.min(100, val))\n    console.log('REPOSITION TARGET')\n  }\n\n  set hsv ({ h, s, v }) {\n    console.log(h, s, v)\n  }\n\n  set lightness (val) {\n    console.log(val);\n  }\n\n  set hsl ({ h, s, l }) {\n    console.log(h, s, l)\n  }\n\n  set red (val) {\n    console.log(val);\n  }\n\n  set g (val) {\n    console.log(val);\n  }\n\n  set blue (val) {\n    console.log(val);\n  }\n\n  set rgb ({ r, g, b }) {\n    console.log(r, g, b)\n  }\n\n  get hex () {\n\n  }\n\n  set hex (val) {\n    console.log(val);\n  }\n\n  set alpha (val) {\n    console.log(val)\n  }\n\n  get position () {\n    return this.PRIVATE.generatePositionObject()\n  }\n\n  // get previousColor () {\n  //   return this.PRIVATE.generateColorObj(this.PRIVATE.previousColor)\n  // }\n\n  // get selectedColor () {\n  //   return this.PRIVATE.HSVToRGB({\n  //     h: this.PRIVATE.hue,\n  //     s: this.UTIL.getPercentageDecimal(position.x, this.clientWidth) * 100,\n  //     v: 100 - (this.UTIL.getPercentageDecimal(position.y, this.clientHeight) * 100)\n  //   })\n  //\n  //   // return this.PRIVATE.generateColorObj(this.PRIVATE.selectedColor)\n  // }\n\n  // set selectedColor (color) {\n  //   if (color.startsWith('#')) {\n  //     return console.log('process hex')\n  //   }\n  //\n  //   if (color.startsWith('rgb')) {\n  //     return console.log('process rgb')\n  //   }\n  //\n  //   if (color.startsWith('hsl')) {\n  //     return console.log('process hsl')\n  //   }\n  // }\n}\n\ncustomElements.define('author-color-picker', AuthorColorPickerElement)\n\nexport default AuthorColorPickerElement\n"],"names":["AuthorColorPickerElement","AuthorBaseElement","HTMLElement","[object Object]","super","this","UTIL","defineProperties","hue","private","default","saturation","value","alpha","canvas","readonly","get","shadowRoot","querySelector","context","PRIVATE","getContext","position","x","y","dimensions","getBoundingClientRect","initialWidth","initialHeight","definePrivateMethods","draw","width","height","HSVToRGB","rgb","clearRect","fillStyle","fillRect","gradient","createLinearGradient","addColorStop","generateColorObject","h","s","v","r","g","b","a","hex","RGBToHex","rgba","join","generatePositionObject","px","pct","getPercentageDecimal","clientWidth","clientHeight","getRelativePosition","evt","top","left","offset","pageX","clientLeft","pageY","clientTop","Math","min","max","i","f","p","q","t","round","floor","unitToHex","unit","Number","toString","length","toUpperCase","pointermoveHandler","buttons","document","addEventListener","pointerupHandler","relative","emit","color","removeEventListener","registerListeners","connected","pointerenter","pointerdown","val","console","log","hsv","lightness","hsl","l","red","blue","customElements","define"],"mappings":"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"}