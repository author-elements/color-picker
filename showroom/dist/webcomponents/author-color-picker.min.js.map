{"version":3,"file":"author-color-picker.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorColorPickerElement extends AuthorSliderElement {\n  constructor () {\n    super(`{{TEMPLATE-STRING}}`)\n\n    // Override AuthorSliderElement defaults\n    this.PRIVATE.defaultAxis = '*'\n\n    this.PRIVATE.pointerupHandler = evt => {\n      let { generateColorObject, generatePositionObject, handles, pointermoveHandler, pointerupHandler } = this.PRIVATE\n      let reposition = true\n\n      // this.PRIVATE.previousColor = this.PRIVATE.selectedColor\n      // this.PRIVATE.selectedColor = currentColor\n\n      let position = null\n\n      if (handles.length > 1) {\n        reposition = false\n      } else if (handles.length !== 0) {\n        handles.item(0).position = position = generatePositionObject()\n      }\n\n      if (reposition) {\n        this.emit('change', {\n          // previous: this.previousColor,\n          color: generateColorObject(),\n          position: position || generatePositionObject()\n        })\n      }\n\n      document.removeEventListener('pointermove', pointermoveHandler)\n      document.removeEventListener('pointerup', pointerupHandler)\n    }\n\n    this.PRIVATE.pointermoveHandler = evt => {\n      if (evt.buttons < 1) {\n        return\n      }\n\n      let { getPercentageDecimal } = this.UTIL\n      let { generateColorObject, generatePositionObject, handles, position } = this.PRIVATE\n      let relative = this.PRIVATE.getRelativePosition(evt)\n\n      if ((!this.position.x || relative.x !== position.x) || (!this.position.y || relative.y !== position.y)) {\n        this.PRIVATE.setSampledColor(relative)\n        this.PRIVATE.position = relative\n\n        if (handles.length !== 0) {\n          handles.item(0).position = this.position\n        }\n\n        this.emit('slide', {\n          color: generateColorObject(),\n          position: generatePositionObject()\n        })\n      }\n    }\n\n    this.UTIL.defineProperties({\n      defaultMode: {\n        private: true,\n        readonly: true,\n        default: 'default'\n      },\n\n      defaultOrientation: {\n        private: true,\n        readonly: true,\n        default: 'horizontal'\n      },\n\n      validModes: {\n        private: true,\n        readonly: true,\n        default: ['default', 'hue', 'gradient']\n      },\n\n      hue: {\n        private: true,\n        default: 0\n      },\n\n      saturation: {\n        private: true,\n        default: 0\n      },\n\n      value: {\n        private: true,\n        default: 100\n      },\n\n      alpha: {\n        private: true,\n        default: 100\n      }\n    })\n\n    this.UTIL.defineAttributes({\n      mode: this.PRIVATE.defaultMode,\n      orientation: this.PRIVATE.defaultOrientation\n    })\n\n    this.UTIL.definePrivateMethods({\n      update: () => {\n        let { hue, saturation, value, HSVToRGB, setHandlePosition } = this.PRIVATE\n\n        switch (this.mode) {\n          case 'default':\n            this.UTIL.setStyleProperty('bgColorRule', 'background-color', `rgba(${HSVToRGB(hue, 100, 100).join(', ')}, 1)`)\n\n            return setHandlePosition({\n              x: { pct: saturation / 100 },\n              y: { pct: 1 - (value / 100) }\n            })\n\n          case 'hue': return setHandlePosition({\n            x: { pct: hue / 360 }\n          })\n        }\n      },\n\n      setHandlePosition: position => {\n        let { handles } = this.PRIVATE\n\n        if (handles.length === 1) {\n          handles.item(0).position = position\n        }\n      },\n\n      generateColorObject: (h = this.PRIVATE.hue, s = this.PRIVATE.saturation, v = this.PRIVATE.value) => {\n        let { alpha, HSVToRGB } = this.PRIVATE\n\n        let rgb = HSVToRGB(h, s, v)\n        let r = rgb[0]\n        let g = rgb[1]\n        let b = rgb[2]\n\n        return {\n          hue: this.PRIVATE.hue,\n          saturation: this.PRIVATE.saturation,\n          value: this.PRIVATE.value,\n          r,\n          g,\n          b,\n          alpha,\n          hex: `#${this.PRIVATE.RGBToHex(...rgb)}`,\n          rgba: `rgba(${rgb.join(',')},${alpha / 100})`\n        }\n      },\n\n      hexToRGB: hex => {\n        let [ , short, long ] = String(hex).match(/^#?(?:([\\da-f]{3})[\\da-f]?|([\\da-f]{6})(?:[\\da-f]{2})?)$/i) || []\n        let rgb\n\n        if (short) {\n          return Array.from(short, s => Number.parseInt(s, 16)).map(n => (n << 4) | n)\n        }\n\n        let value = Number.parseInt(long, 16)\n        return [ value >> 16, value >> 8 & 0xFF, value & 0xFF ]\n      },\n\n      HSVToRGB: (h = this.PRIVATE.hue, s = this.PRIVATE.saturation, v = this.PRIVATE.value) => {\n        h = Math.max(0, Math.min(360, h))\n        s = Math.max(0, Math.min(100, s)) / 100\n        v = Math.max(0, Math.min(100, v)) / 100\n\n        let f = n => {\n          let k = (n + h / 60) % 6\n          return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0)\n        }\n\n        return [f(5) * 255, f(3) * 255, f(1) * 255]\n      },\n\n      RGBToHex: (r, g, b) => {\n        let unitToHex = unit => {\n          let hex = Number(unit).toString(16)\n\n          if (hex.length < 2) {\n            hex = `0${hex}`\n          }\n\n          return hex.toUpperCase()\n        }\n\n        return `${unitToHex(r)}${unitToHex(g)}${unitToHex(b)}`\n      },\n\n      RGBToHSV: (r, g, b) => {\n        r /= 255, g /= 255, b /= 255\n\n        let max = Math.max(r, g, b)\n        let min = Math.min(r, g, b)\n\n        let h, s, v = max\n        let diff = max - min\n        s = max === 0 ? 0 : diff / max\n\n        if (max === min) {\n          h = 0\n        } else {\n          switch (max) {\n            case r:\n              h = 60 * (0 + ((g - b) / diff))\n              break\n\n            case g:\n              h = 60 * (2 + ((b - r) / diff))\n              break\n\n            case b:\n              h = 60 * (4 + ((r - g) / diff))\n              break\n          }\n\n          h = h < 0 ? h + 360 : h\n        }\n\n        return [h, s * 100, v * 100]\n      },\n\n      setSampledColor: (position, percentage = false) => {\n        let { getPercentageDecimal } = this.UTIL\n\n        switch (this.mode) {\n          case 'default':\n            this.PRIVATE.saturation = getPercentageDecimal(position.x, this.clientWidth) * 100\n            this.PRIVATE.value = 100 - (getPercentageDecimal(position.y, this.clientHeight) * 100)\n            break\n\n          case 'hue':\n            this.PRIVATE.hue = this.orientation === 'horizontal'\n              ? getPercentageDecimal(position.x, this.clientWidth) * 360\n              : getPercentageDecimal(position.y, this.clientHeight) * 360\n\n            this.PRIVATE.saturation = 100\n            this.PRIVATE.value = 100\n            break\n        }\n      },\n\n      setRGB: (r, g, b) => {\n        let hsv = this.PRIVATE.RGBToHSV(r, g, b)\n\n        this.PRIVATE.hue = hsv[0]\n        this.PRIVATE.saturation = hsv[1]\n        this.PRIVATE.value = hsv[2]\n\n        this.PRIVATE.update()\n      }\n    })\n\n    this.UTIL.registerListeners(this, {\n      'attribute.change': evt => {\n        let { attribute, oldValue, newValue } = evt.detail\n\n        if (newValue === oldValue) {\n          return\n        }\n\n        let { defaultMode, validModes } = this.PRIVATE\n\n        switch (attribute) {\n          case 'mode':\n            let arr = newValue.split(' ').filter(mode => validModes.includes(mode))\n\n            if (!arr.length) {\n              this.setAttribute('mode', defaultMode)\n\n              return this.UTIL.throwError({\n                message: `Invalid mode \"${newValue}\". Valid values include: \"${validModes.join('\", \"')}\"`\n              })\n            }\n\n            return this.PRIVATE.update()\n        }\n      },\n\n      connected: () => {\n        // Remove default author-slider pointerdown handler\n        this.removeEventListener('pointerdown', this.PRIVATE.pointerdownHandler)\n\n        // Reset AuthorSliderElement defaults\n        if (!this.hasAttribute('axis')) {\n          this.axis = this.PRIVATE.defaultAxis\n        }\n\n        this.UTIL.insertStyleRules({\n          bgColorRule: ':host {}'\n        })\n\n        this.PRIVATE.update()\n      },\n\n      pointerdown: evt => {\n        this.PRIVATE.position = this.PRIVATE.getRelativePosition(evt)\n\n        let { getPercentageDecimal } = this.UTIL\n        let { generateColorObject, generatePositionObject, handles, HSVToRGB, hue, pointermoveHandler, pointerupHandler, position } = this.PRIVATE\n\n        if (handles.length > 1) {\n          return\n        }\n\n        this.PRIVATE.setSampledColor(position)\n\n        if (handles.length !== 0) {\n          handles.item(0).position = this.position\n        }\n\n        this.emit('change', {\n          color: generateColorObject(),\n          position: generatePositionObject()\n        })\n\n        document.addEventListener('pointerup', pointerupHandler)\n        document.addEventListener('pointermove', pointermoveHandler)\n      }\n    })\n  }\n\n  static get observedAttributes () {\n    return [...AuthorSliderElement.observedAttributes, 'mode', 'orientation']\n  }\n\n  get position () {\n    return this.PRIVATE.generatePositionObject()\n  }\n\n  get selectedColor () {\n    return this.PRIVATE.generateColorObject()\n  }\n\n  get hue () {\n    return this.PRIVATE.hue\n  }\n\n  set hue (val) {\n    val = Math.max(0, Math.min(360, val))\n    this.PRIVATE.hue = val === 360 ? 0 : val\n    this.PRIVATE.update()\n  }\n\n  get rgb () {\n    return this.PRIVATE.HSVToRGB()\n  }\n\n  set rgb ({r = 0, g = 0, b = 0}) {\n    this.PRIVATE.setRGB(Math.min(r, 255), Math.min(g, 255), Math.min(b, 255))\n  }\n\n  set red (val) {\n    let rgb = this.PRIVATE.HSVToRGB()\n    this.PRIVATE.setRGB(Math.min(val, 255), ...rgb.slice(1))\n  }\n\n  set r (val) {\n    this.red = val\n  }\n\n  set green (val) {\n    let rgb = this.PRIVATE.HSVToRGB()\n    this.PRIVATE.setRGB(rgb[0], Math.min(val, 255), rgb[2])\n  }\n\n  set g (val) {\n    this.green = val\n  }\n\n  set blue (val) {\n    let rgb = this.PRIVATE.HSVToRGB()\n    this.PRIVATE.setRGB(...rgb.slice(-2), Math.min(val, 255))\n  }\n\n  set b (val) {\n    this.blue = val\n  }\n\n  // set alpha (val) {\n  //   console.log(val)\n  // }\n\n  // set a (val) {\n  //   console.log(val)\n  // }\n\n  get hex () {\n    return `#${this.PRIVATE.RGBToHex(...this.PRIVATE.HSVToRGB())}`\n  }\n\n  set hex (val) {\n    this.PRIVATE.setRGB(...this.PRIVATE.hexToRGB(val))\n  }\n\n  set saturation (val) {\n    this.PRIVATE.saturation = Math.max(0, Math.min(100, val))\n    this.PRIVATE.update()\n  }\n\n  set s (val) {\n    this.saturation = val\n  }\n\n  set value (val) {\n    this.PRIVATE.value = Math.max(0, Math.min(100, val))\n    this.PRIVATE.update()\n  }\n\n  set v (val) {\n    this.value = val\n  }\n\n  set hsv ({ h, s, v }) {\n    h = Math.max(0, Math.min(360, h))\n    this.PRIVATE.hue = h === 360 ? 0 : h\n    this.PRIVATE.saturation = Math.max(0, Math.min(100, s))\n    this.PRIVATE.value = Math.max(0, Math.min(100, v))\n    this.PRIVATE.update()\n\n  }\n\n  // set lightness (val) {\n  //   console.log(val);\n  // }\n\n  // set hsl ({ h, s, l }) {\n  //   console.log(h, s, l)\n  // }\n}\n\ncustomElements.define('author-color-picker', AuthorColorPickerElement)\n\nexport default AuthorColorPickerElement\n"],"names":["AuthorColorPickerElement","AuthorSliderElement","[object Object]","super","this","PRIVATE","defaultAxis","pointerupHandler","evt","generateColorObject","generatePositionObject","handles","pointermoveHandler","reposition","position","length","item","emit","color","document","removeEventListener","buttons","getPercentageDecimal","UTIL","relative","getRelativePosition","x","y","setSampledColor","defineProperties","defaultMode","private","readonly","default","defaultOrientation","validModes","hue","saturation","value","alpha","defineAttributes","mode","orientation","definePrivateMethods","update","HSVToRGB","setHandlePosition","setStyleProperty","join","pct","h","s","v","rgb","r","g","b","hex","RGBToHex","rgba","hexToRGB","short","long","String","match","Array","from","Number","parseInt","map","n","Math","max","min","f","k","unitToHex","unit","toString","toUpperCase","RGBToHSV","diff","percentage","clientWidth","clientHeight","setRGB","hsv","registerListeners","attribute.change","attribute","oldValue","newValue","detail","split","filter","includes","setAttribute","throwError","message","connected","pointerdownHandler","hasAttribute","axis","insertStyleRules","bgColorRule","pointerdown","addEventListener","observedAttributes","selectedColor","val","red","slice","green","blue","customElements","define"],"mappings":"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"}