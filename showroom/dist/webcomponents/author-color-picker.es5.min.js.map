{"version":3,"file":"author-color-picker.es5.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorColorPickerElement extends AuthorSliderElement {\n  constructor () {\n    super(`{{TEMPLATE-STRING}}`)\n\n    // Override AuthorSliderElement defaults\n    this.PRIVATE.defaultAxis = '*'\n\n    this.PRIVATE.pointerupHandler = evt => {\n      let { generateColorObject, generatePositionObject, handles, pointermoveHandler, pointerupHandler } = this.PRIVATE\n      let reposition = true\n\n      // this.PRIVATE.previousColor = this.PRIVATE.selectedColor\n      // this.PRIVATE.selectedColor = currentColor\n\n      let position = null\n\n      if (handles.length > 1) {\n        reposition = false\n      } else if (handles.length !== 0) {\n        handles.item(0).position = position = generatePositionObject()\n      }\n\n      if (reposition) {\n        this.emit('change', {\n          // previous: this.previousColor,\n          color: generateColorObject(),\n          position: position || generatePositionObject()\n        })\n      }\n\n      document.removeEventListener('pointermove', pointermoveHandler)\n      document.removeEventListener('pointerup', pointerupHandler)\n    }\n\n    this.PRIVATE.pointermoveHandler = evt => {\n      if (evt.buttons < 1) {\n        return\n      }\n\n      let { getPercentageDecimal } = this.UTIL\n      let { generateColorObject, generatePositionObject, handles, position } = this.PRIVATE\n      let relative = this.PRIVATE.getRelativePosition(evt)\n\n      if ((!this.position.x || relative.x !== position.x) || (!this.position.y || relative.y !== position.y)) {\n        this.PRIVATE.setSampledColor(relative)\n        this.PRIVATE.position = relative\n\n        if (handles.length !== 0) {\n          handles.item(0).position = this.position\n        }\n\n        this.emit('slide', {\n          color: generateColorObject(),\n          position: generatePositionObject()\n        })\n      }\n    }\n\n    this.UTIL.defineProperties({\n      defaultMode: {\n        private: true,\n        readonly: true,\n        default: 'default'\n      },\n\n      defaultOrientation: {\n        private: true,\n        readonly: true,\n        default: 'horizontal'\n      },\n\n      validModes: {\n        private: true,\n        readonly: true,\n        default: ['default', 'hue', 'gradient']\n      },\n\n      hue: {\n        private: true,\n        default: 0\n      },\n\n      saturation: {\n        private: true,\n        default: 0\n      },\n\n      value: {\n        private: true,\n        default: 100\n      },\n\n      alpha: {\n        private: true,\n        default: 100\n      }\n    })\n\n    this.UTIL.defineAttributes({\n      mode: this.PRIVATE.defaultMode,\n      orientation: this.PRIVATE.defaultOrientation\n    })\n\n    this.UTIL.definePrivateMethods({\n      update: () => {\n        let { hue, saturation, value, HSVToRGB, setHandlePosition } = this.PRIVATE\n\n        switch (this.mode) {\n          case 'default':\n            this.UTIL.setStyleProperty('bgColorRule', 'background-color', `rgba(${HSVToRGB(hue, 100, 100).join(', ')}, 1)`)\n\n            return setHandlePosition({\n              x: { pct: saturation / 100 },\n              y: { pct: 1 - (value / 100) }\n            })\n\n          case 'hue': return setHandlePosition({\n            x: { pct: hue / 360 }\n          })\n        }\n      },\n\n      setHandlePosition: position => {\n        let { handles } = this.PRIVATE\n\n        if (handles.length === 1) {\n          handles.item(0).position = position\n        }\n      },\n\n      generateColorObject: (h = this.PRIVATE.hue, s = this.PRIVATE.saturation, v = this.PRIVATE.value) => {\n        let { alpha, HSVToRGB } = this.PRIVATE\n\n        let rgb = HSVToRGB(h, s, v)\n        let r = rgb[0]\n        let g = rgb[1]\n        let b = rgb[2]\n\n        return {\n          hue: this.PRIVATE.hue,\n          saturation: this.PRIVATE.saturation,\n          value: this.PRIVATE.value,\n          r,\n          g,\n          b,\n          alpha,\n          hex: `#${this.PRIVATE.RGBToHex(...rgb)}`,\n          rgba: `rgba(${rgb.join(',')},${alpha / 100})`\n        }\n      },\n\n      hexToRGB: hex => {\n        let [ , short, long ] = String(hex).match(/^#?(?:([\\da-f]{3})[\\da-f]?|([\\da-f]{6})(?:[\\da-f]{2})?)$/i) || []\n        let rgb\n\n        if (short) {\n          return Array.from(short, s => Number.parseInt(s, 16)).map(n => (n << 4) | n)\n        }\n\n        let value = Number.parseInt(long, 16)\n        return [ value >> 16, value >> 8 & 0xFF, value & 0xFF ]\n      },\n\n      HSVToRGB: (h = this.PRIVATE.hue, s = this.PRIVATE.saturation, v = this.PRIVATE.value) => {\n        h = Math.max(0, Math.min(360, h))\n        s = Math.max(0, Math.min(100, s)) / 100\n        v = Math.max(0, Math.min(100, v)) / 100\n\n        let f = n => {\n          let k = (n + h / 60) % 6\n          return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0)\n        }\n\n        return [f(5) * 255, f(3) * 255, f(1) * 255]\n      },\n\n      RGBToHex: (r, g, b) => {\n        let unitToHex = unit => {\n          let hex = Number(unit).toString(16)\n\n          if (hex.length < 2) {\n            hex = `0${hex}`\n          }\n\n          return hex.toUpperCase()\n        }\n\n        return `${unitToHex(r)}${unitToHex(g)}${unitToHex(b)}`\n      },\n\n      RGBToHSV: (r, g, b) => {\n        r /= 255, g /= 255, b /= 255\n\n        let max = Math.max(r, g, b)\n        let min = Math.min(r, g, b)\n\n        let h, s, v = max\n        let diff = max - min\n        s = max === 0 ? 0 : diff / max\n\n        if (max === min) {\n          h = 0\n        } else {\n          switch (max) {\n            case r:\n              h = 60 * (0 + ((g - b) / diff))\n              break\n\n            case g:\n              h = 60 * (2 + ((b - r) / diff))\n              break\n\n            case b:\n              h = 60 * (4 + ((r - g) / diff))\n              break\n          }\n\n          h = h < 0 ? h + 360 : h\n        }\n\n        return [h, s * 100, v * 100]\n      },\n\n      setSampledColor: (position, percentage = false) => {\n        let { getPercentageDecimal } = this.UTIL\n\n        switch (this.mode) {\n          case 'default':\n            this.PRIVATE.saturation = getPercentageDecimal(position.x, this.clientWidth) * 100\n            this.PRIVATE.value = 100 - (getPercentageDecimal(position.y, this.clientHeight) * 100)\n            break\n\n          case 'hue':\n            this.PRIVATE.hue = this.orientation === 'horizontal'\n              ? getPercentageDecimal(position.x, this.clientWidth) * 360\n              : getPercentageDecimal(position.y, this.clientHeight) * 360\n\n            this.PRIVATE.saturation = 100\n            this.PRIVATE.value = 100\n            break\n        }\n      },\n\n      setRGB: (r, g, b) => {\n        let hsv = this.PRIVATE.RGBToHSV(r, g, b)\n\n        this.PRIVATE.hue = hsv[0]\n        this.PRIVATE.saturation = hsv[1]\n        this.PRIVATE.value = hsv[2]\n\n        this.PRIVATE.update()\n      }\n    })\n\n    this.UTIL.registerListeners(this, {\n      'attribute.change': evt => {\n        let { attribute, oldValue, newValue } = evt.detail\n\n        if (newValue === oldValue) {\n          return\n        }\n\n        let { defaultMode, validModes } = this.PRIVATE\n\n        switch (attribute) {\n          case 'mode':\n            let arr = newValue.split(' ').filter(mode => validModes.includes(mode))\n\n            if (!arr.length) {\n              this.setAttribute('mode', defaultMode)\n\n              return this.UTIL.throwError({\n                message: `Invalid mode \"${newValue}\". Valid values include: \"${validModes.join('\", \"')}\"`\n              })\n            }\n\n            return this.PRIVATE.update()\n        }\n      },\n\n      connected: () => {\n        // Remove default author-slider pointerdown handler\n        this.removeEventListener('pointerdown', this.PRIVATE.pointerdownHandler)\n\n        // Reset AuthorSliderElement defaults\n        if (!this.hasAttribute('axis')) {\n          this.axis = this.PRIVATE.defaultAxis\n        }\n\n        this.UTIL.insertStyleRules({\n          bgColorRule: ':host {}'\n        })\n\n        this.PRIVATE.update()\n      },\n\n      pointerdown: evt => {\n        this.PRIVATE.position = this.PRIVATE.getRelativePosition(evt)\n\n        let { getPercentageDecimal } = this.UTIL\n        let { generateColorObject, generatePositionObject, handles, HSVToRGB, hue, pointermoveHandler, pointerupHandler, position } = this.PRIVATE\n\n        if (handles.length > 1) {\n          return\n        }\n\n        this.PRIVATE.setSampledColor(position)\n\n        if (handles.length !== 0) {\n          handles.item(0).position = this.position\n        }\n\n        this.emit('change', {\n          color: generateColorObject(),\n          position: generatePositionObject()\n        })\n\n        document.addEventListener('pointerup', pointerupHandler)\n        document.addEventListener('pointermove', pointermoveHandler)\n      }\n    })\n  }\n\n  static get observedAttributes () {\n    return [...AuthorSliderElement.observedAttributes, 'mode', 'orientation']\n  }\n\n  get position () {\n    return this.PRIVATE.generatePositionObject()\n  }\n\n  get hue () {\n    return this.PRIVATE.hue\n  }\n\n  set hue (val) {\n    val = Math.max(0, Math.min(360, val))\n    this.PRIVATE.hue = val === 360 ? 0 : val\n    this.PRIVATE.update()\n  }\n\n  get rgb () {\n    return this.PRIVATE.HSVToRGB()\n  }\n\n  set rgb ({r = 0, g = 0, b = 0}) {\n    this.PRIVATE.setRGB(Math.max(r, 255), Math.max(g, 255), Math.max(b, 255))\n  }\n\n  set red (val) {\n    let rgb = this.PRIVATE.HSVToRGB()\n    this.PRIVATE.setRGB(Math.max(val, 255), ...rgb.slice(1))\n  }\n\n  set r (val) {\n    this.red = val\n  }\n\n  set green (val) {\n    let rgb = this.PRIVATE.HSVToRGB()\n    this.PRIVATE.setRGB(rgb[0], Math.max(val, 255), rgb[2])\n  }\n\n  set g (val) {\n    this.green = val\n  }\n\n  set blue (val) {\n    let rgb = this.PRIVATE.HSVToRGB()\n    this.PRIVATE.setRGB(...rgb.slice(-2), Math.max(val, 255))\n  }\n\n  set b (val) {\n    this.blue = val\n  }\n\n  // set alpha (val) {\n  //   console.log(val)\n  // }\n\n  // set a (val) {\n  //   console.log(val)\n  // }\n\n  get hex () {\n    return `#${this.PRIVATE.RGBToHex(...this.PRIVATE.HSVToRGB())}`\n  }\n\n  set hex (val) {\n    this.PRIVATE.setRGB(...this.PRIVATE.hexToRGB(val))\n  }\n\n  set saturation (val) {\n    this.PRIVATE.saturation = Math.max(0, Math.min(100, val))\n    this.PRIVATE.update()\n  }\n\n  set s (val) {\n    this.saturation = val\n  }\n\n  set value (val) {\n    this.PRIVATE.value = Math.max(0, Math.min(100, val))\n    this.PRIVATE.update()\n  }\n\n  set v (val) {\n    this.value = val\n  }\n\n  set hsv ({ h, s, v }) {\n    h = Math.max(0, Math.min(360, h))\n    this.PRIVATE.hue = h === 360 ? 0 : h\n    this.PRIVATE.saturation = Math.max(0, Math.min(100, s))\n    this.PRIVATE.value = Math.max(0, Math.min(100, v))\n    this.PRIVATE.update()\n\n  }\n\n  // set lightness (val) {\n  //   console.log(val);\n  // }\n\n  // set hsl ({ h, s, l }) {\n  //   console.log(h, s, l)\n  // }\n}\n\ncustomElements.define('author-color-picker', AuthorColorPickerElement)\n\nexport default AuthorColorPickerElement\n"],"names":["AuthorColorPickerElement","PRIVATE","defaultAxis","pointerupHandler","evt","_this","generateColorObject","generatePositionObject","handles","pointermoveHandler","reposition","position","length","item","emit","color","document","removeEventListener","buttons","UTIL","getPercentageDecimal","relative","getRelativePosition","x","y","setSampledColor","defineProperties","defaultMode","private","readonly","default","defaultOrientation","validModes","hue","saturation","value","alpha","defineAttributes","mode","orientation","definePrivateMethods","update","HSVToRGB","setHandlePosition","setStyleProperty","join","pct","h","s","v","rgb","r","g","b","hex","RGBToHex","rgba","hexToRGB","String","match","short","long","Array","from","Number","parseInt","map","n","Math","max","min","f","k","unitToHex","unit","toString","toUpperCase","RGBToHSV","diff","clientWidth","clientHeight","setRGB","hsv","registerListeners","detail","attribute","oldValue","newValue","split","filter","includes","setAttribute","throwError","message","connected","pointerdownHandler","hasAttribute","axis","insertStyleRules","bgColorRule","pointerdown","addEventListener","AuthorSliderElement","observedAttributes","this","val","slice","red","green","blue","customElements","define"],"mappings":"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"}