var AuthorColorPickerElement=function(){"use strict";window.hasOwnProperty("AuthorBaseElement")||(console.error('[ERROR] <author-color-picker> Required dependency "AuthorBaseElement" not found.'),console.info("AuthorBaseElement is available at https://github.com/author-elements/base")),function(){let e=Array.from(new Set([])).filter(e=>!customElements.get(e));e.length>0&&(console.error(`[ERROR] <author-color-picker> Required dependenc${1!==e.length?"ies":"y"} not found: ${e.map(e=>`<${e}>`).join(", ").replace(", "+e[e.length-1]," and "+e[e.length-1])}`),e.forEach((e,t)=>console.info(`${t+1}. <${e}> is available at ${"https://github.com/author-elements/color-picker".replace("color-picker",e.replace("author-",""))}`)))}();class e extends(AuthorBaseElement(HTMLElement)){constructor(){super('<template><style>@charset "UTF-8"; :host{contain:content;display:flex;flex-direction:column}:host *,:host :after,:host :before{box-sizing:border-box}:host .wrapper{position:relative;flex:1;display:flex;flex-direction:column}:host .canvas-wrapper{flex:1;display:flex;flex-direction:column}:host canvas{flex:1;display:block;width:100%;height:100%}:host ::slotted(*){position:absolute;z-index:1}author-color-picker{contain:content;display:flex;flex-direction:column}author-color-picker *,author-color-picker :after,author-color-picker :before{box-sizing:border-box}author-color-picker .wrapper{position:relative;flex:1;display:flex;flex-direction:column}author-color-picker .canvas-wrapper{flex:1;display:flex;flex-direction:column}author-color-picker canvas{flex:1;display:block;width:100%;height:100%}author-color-picker *{position:absolute;z-index:1}</style><div class="wrapper"><slot></slot><div class="canvas-wrapper"><canvas></canvas></div></div></template>'),this.UTIL.defineProperties({canvas:{private:!0,readonly:!0,get:()=>this.shadowRoot.querySelector("canvas")},context:{private:!0,readonly:!0,get:()=>this.PRIVATE.canvas.getContext("2d")},position:{private:!0,default:{x:0,y:0}},dimensions:{private:!0,readonly:!0,get:()=>this.PRIVATE.canvas.getBoundingClientRect()},initialWidth:{private:!0,default:0},initialheight:{private:!0,default:0},currentColor:{private:!0,default:{r:255,g:255,b:255}},selectedColor:{private:!0,default:{r:255,g:255,b:255}},previousColor:{private:!0,default:{r:255,g:255,b:255}}}),this.UTIL.definePrivateMethods({draw:(e=this.PRIVATE.dimensions.width,t=this.PRIVATE.dimensions.height)=>{let{canvas:o,context:i}=this.PRIVATE;o.width=e,o.height=t,i.clearRect(0,0,e,t);let r={x:i.createLinearGradient(0,0,e,0),y:i.createLinearGradient(0,0,0,t)};r.x.addColorStop(0,"red"),r.x.addColorStop(1/6,"fuchsia"),r.x.addColorStop(2/6,"blue"),r.x.addColorStop(.5,"aqua"),r.x.addColorStop(4/6,"lime"),r.x.addColorStop(5/6,"yellow"),r.x.addColorStop(1,"red"),i.fillStyle=r.x,i.fillRect(0,0,e,t),r.y.addColorStop(0,"white"),r.y.addColorStop(.5,"rgba(255,255,255,0)"),r.y.addColorStop(.5,"rgba(0,0,0,0)"),r.y.addColorStop(1,"black"),i.fillStyle=r.y,i.fillRect(0,0,e,t)},generateColorObj:({r:e,g:t,b:o})=>{let i=this.PRIVATE.RGBToHSL({r:e,g:t,b:o}),r=i[0],s=i[1],n=i[2];return{red:e,green:t,blue:o,hex:`#${this.PRIVATE.RGBToHex({r:e,g:t,b:o})}`,rgb:`rgb(${e},${t},${o})`,hsl:`hsl(${r},${100*s}%, ${100*n}%)`,hue:r,saturation:s,lightness:n}},unitToHex:e=>{let t=Number(e).toString(16);return t.length<2&&(t=`0${t}`),t.toUpperCase()},RGBToHex:({r:e=255,g:t=255,b:o=255})=>{let{unitToHex:i}=this.PRIVATE;return`${i(e)}${i(t)}${i(o)}`},RGBToHSL:({r:e,g:t,b:o})=>{e/=255,t/=255,o/=255;let i,r,s=Math.min(e,t,o),n=Math.max(e,t,o),l=n-s;switch(n){case s:i=0,r=0;break;case e:i=(t-o)/l;break;case t:i=2+(o-e)/l;break;case o:i=4+(e-t)/l}(i=Math.min(60*i,360))<0&&(i+=360);let a=(s+n)/2;return[i,r=a<=.5?l/(n+s):l/(2-n-s),a]},pointermoveHandler:e=>{if(e.buttons<1)return;let{top:t,left:o,width:i,height:r}=this.PRIVATE.dimensions,s=this.PRIVATE.getRelativePosition(e);s.x===this.position.x.px&&s.y===this.position.y.px||(this.PRIVATE.currentColor=this.PRIVATE.getColor(s),this.PRIVATE.position=s,this.emit("sample",{color:this.PRIVATE.generateColorObj(this.PRIVATE.currentColor),position:this.position}),document.addEventListener("pointerup",this.PRIVATE.pointerupHandler))},getColor:({x:e,y:t})=>{let{data:o}=this.PRIVATE.context.getImageData(e,t,1,1);return{r:o[0],g:o[1],b:o[2]}},pointerupHandler:e=>{let{currentColor:t,pointermoveHandler:o,pointerupHandler:i}=this.PRIVATE;this.PRIVATE.previousColor=this.PRIVATE.selectedColor,this.PRIVATE.selectedColor=t,this.emit("change",{previous:this.previousColor,color:this.selectedColor,position:this.position}),document.removeEventListener("pointermove",o),document.removeEventListener("pointerup",i)},getRelativePosition:e=>{let{top:t,left:o,width:i,height:r}=this.PRIVATE.dimensions;return{x:Math.min(Math.max(e.pageX-o,0),i-.1),y:Math.min(Math.max(e.pageY-t,0),r)}}}),this.UTIL.registerListeners(this,{connected:()=>{let{dimensions:e}=this.PRIVATE;this.PRIVATE.initialWidth=e.width,this.PRIVATE.initialHeight=e.height},rendered:()=>{let{draw:e}=this.PRIVATE;this.UTIL.registerListener(window,"resize",t=>e()),e()}}),this.UTIL.registerListeners(this,{pointerenter:e=>{let{dimensions:t,draw:o,initialWidth:i,initialHeight:r}=this.PRIVATE;i===t.width&&r===t.height||o()},pointerdown:e=>{this.PRIVATE.position=this.PRIVATE.getRelativePosition(e);let{position:t,getColor:o,pointermoveHandler:i}=this.PRIVATE;this.PRIVATE.previousColor=this.PRIVATE.selectedColor,this.PRIVATE.selectedColor=o(t),this.emit("change",{previous:this.previousColor,color:this.selectedColor,position:this.position}),document.addEventListener("pointermove",i)}})}get position(){let{position:e,dimensions:t}=this.PRIVATE;return{x:{px:e.x,percentage:this.UTIL.getPercentageDecimal(e.x,t.width)},y:{px:e.y,percentage:this.UTIL.getPercentageDecimal(e.y,t.height)}}}get previousColor(){return this.PRIVATE.generateColorObj(this.PRIVATE.previousColor)}get selectedColor(){return this.PRIVATE.generateColorObj(this.PRIVATE.selectedColor)}}return customElements.define("author-color-picker",e),e}();
//# sourceMappingURL=author-color-picker.min.js.map
